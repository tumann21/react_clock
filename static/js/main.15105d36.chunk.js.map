{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","setInterval","state","date","Date","this","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","className","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,QAAwBC,aAAY,cACjC,KAFL,EAIEC,MAAQ,CACNC,KAAM,IAAIC,MALd,uDAQE,WAAqB,IAAD,OAClBC,KAAKL,QAAUC,aAAY,WACzB,EAAKK,SAAS,CAAEH,KAAM,IAAIC,OAE1BG,QAAQC,IAAI,EAAKN,MAAMC,KAAKM,wBAC3B,OAbP,gCAiBE,SAAmBC,GACbA,EAAUC,OAASN,KAAKO,MAAMD,MAEhCJ,QAAQC,IAAI,mDApBlB,kCAwBE,WACEK,cAAcR,KAAKL,WAzBvB,oBA4BE,WACE,IAAQG,EAASE,KAAKH,MAAdC,KAER,OACE,8CAEG,IACAA,EAAKM,4BAnCd,GAA2BK,IAAMC,WCG3BC,E,4MACJd,MAAe,CACbe,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,wBACEC,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKf,SAAS,CAC3BW,gBAAgB,KAJpB,kBASA,wBACEG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKf,SAAS,CAC3BW,gBAAgB,KAJpB,kBASA,wBACEG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKf,SAAS,CAC3BY,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aAJ/B,6BASCnB,KAAKH,MAAMe,gBAAkB,cAAC,EAAD,CAAON,KAAMN,KAAKH,MAAMgB,mB,GArC5CJ,IAAMC,WA2CTC,ICjDfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.15105d36.chunk.js","sourcesContent":["import React from 'react';\n\ntype Name = {\n  name: number,\n};\n\nexport class Clock extends React.Component<Name> {\n  timerId: NodeJS.Timer = setInterval(() => {\n  }, 1000);\n\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  // eslint-disable-next-line\n  componentDidUpdate(prevProps: Name) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log('The Clock was renamed from oldName to newName');\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <p>\n        Current time:\n        {' '}\n        {date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component {\n  state: State = {\n    isClockVisible: true,\n    clockName: 5,\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => this.setState({\n            isClockVisible: true,\n          })}\n        >\n          Show\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => this.setState({\n            isClockVisible: false,\n          })}\n        >\n          Hide\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => this.setState({\n            clockName: Math.floor(Math.random() * 100),\n          })}\n        >\n          Set random name\n        </button>\n        {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}